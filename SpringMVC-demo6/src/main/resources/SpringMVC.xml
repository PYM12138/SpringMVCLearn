<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
   <!--
   1.组件扫描
   2.视图控制器
   3.静态资源访问
   4.注解驱动
   5.响应中文乱码
   6.文件解析器
   7.视图解析器
   8.拦截器
   -->

    <context:component-scan base-package="com"/>
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:default-servlet-handler/>
    <!--开启mvc的注解驱动-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 处理响应中文内容乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>

                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <!--id和class都是固定的-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!--配置拦截器-->
    <mvc:interceptors>
<!--        <bean class="com.atguigu.Interceptor.FirstInterceptor"/>-->
<!--        <ref bean="firstInterceptor"/>-->
        <!--以上两种方式是对所有的请求进行拦截-->

        <!--下面这种可以设置拦截路径-->
        <mvc:interceptor>
            <!--/** 表示本目录和它的子目录=所有目录 /*只表示一层目录，不是所有-->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/"/>
            <!--拦截规则-->
            <ref bean="firstInterceptor"/>
        </mvc:interceptor>
        <!--
            以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求
        -->
    </mvc:interceptors>

    <!--配置异常处理器-->
    <!--SimpleMappingExceptionResolver是SpringMVC给定的异常处理类，可以自己手动处理异常-->
<!--
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                &lt;!&ndash;
        		properties的键表示处理器方法执行过程中出现的异常
        		properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面
        	    &ndash;&gt;
                &lt;!&ndash;自定义的异常，中间写的是跳转页面&ndash;&gt;
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        &lt;!&ndash;当前异常的错误信息保存在request域中，可以在浏览器中调用&ndash;&gt;
        <property name="exceptionAttribute" value="ex"/>

    </bean>
-->

</beans>