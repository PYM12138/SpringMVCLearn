<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--组件扫描-->
    <context:component-scan base-package="com"/>
    <!--thymeleaf视图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>

                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <!--开启视图控制器，首页转发-->
    <mvc:view-controller path="/" view-name="index"/>

    <mvc:view-controller path="/addEmployee" view-name="addemployee"/>

    <!--MVC注解驱动，让控制器的方法生效-->
    <mvc:annotation-driven/>
    <!--开放静态资源访问-->
    <mvc:default-servlet-handler/>
    <!--
    这里要注意：
    1.如果不开放，首先会报错，报的是SpringMVC的错
    2.开放之后，要是出现错误。不再显示SpringMVC的报错，显示的是默认的Servlet的错误(都会显示在控制台，注意查看报错信息)
    3.它们之间的处理流程也是这样，先SpringMVC然后在默认的Servlet

    有两点要注意：
    1.是web工程中，当你要加载静态资源，需要重新把当前的工程打包一次
    2.在SpringMVC中开放静态资源访问

    -->
</beans>